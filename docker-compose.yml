version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: linton-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: linton-portals
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - linton-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: linton-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-staging}
      PORT: 3000
      MONGO_URI: mongodb://admin:${MONGO_PASSWORD:-password123}@mongodb:27017/linton-portals?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: ${CLIENT_URL:-http://localhost:5173}
      EMPLOYEE_URL: ${EMPLOYEE_URL:-http://localhost:5174}
      ADMIN_URL: ${ADMIN_URL:-http://localhost:5175}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_SECURE: ${EMAIL_SECURE:-false}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    volumes:
      - ./packages/backend/uploads:/app/uploads
    networks:
      - linton-network

  # Client Portal
  client-portal:
    build:
      context: .
      dockerfile: Dockerfile.client-portal
    container_name: linton-client-portal
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
      VITE_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - linton-network

  # Employee Portal
  employee-portal:
    build:
      context: .
      dockerfile: Dockerfile.employee-portal
    container_name: linton-employee-portal
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
    ports:
      - "5174:80"
    depends_on:
      - backend
    networks:
      - linton-network

  # Admin Panel
  admin-panel:
    build:
      context: .
      dockerfile: Dockerfile.admin-panel
    container_name: linton-admin-panel
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
    ports:
      - "5175:80"
    depends_on:
      - backend
    networks:
      - linton-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: linton-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - client-portal
      - employee-portal
      - admin-panel
    networks:
      - linton-network

volumes:
  mongodb_data:
    driver: local

networks:
  linton-network:
    driver: bridge 